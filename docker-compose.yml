version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nosbaan-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nosbaan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nosbaan-backend
    restart: always
    ports:
      - '3000:3000'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      RUN_SEED: ${RUN_SEED}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nosbaan-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nosbaan-frontend
    restart: always
    ports:
      - '80:80'
    depends_on:
      - backend
    networks:
      - nosbaan-network

volumes:
  postgres_data:

networks:
  nosbaan-network:
    driver: bridge

